{
  "manifest": {
    "author": {
      "name": "Isaac Z. Schlueter",
      "email": "i@izs.me",
      "url": "http://blog.izs.me/"
    },
    "name": "tar",
    "description": "tar for node",
    "version": "2.2.2",
    "repository": {
      "type": "git",
      "url": "git://github.com/isaacs/node-tar.git"
    },
    "main": "tar.js",
    "scripts": {
      "test": "tap test/*.js"
    },
    "dependencies": {
      "block-stream": "*",
      "fstream": "^1.0.12",
      "inherits": "2"
    },
    "devDependencies": {
      "graceful-fs": "^4.1.2",
      "rimraf": "1.x",
      "tap": "0.x",
      "mkdirp": "^0.5.0"
    },
    "license": "ISC",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-tar-2.2.2-0ca8848562c7299b8b446ff6a4d60cdbb23edc40-integrity/node_modules/tar/package.json",
    "readmeFilename": "README.md",
    "readme": "# node-tar\n\nTar for Node.js.\n\n[![NPM](https://nodei.co/npm/tar.png)](https://nodei.co/npm/tar/)\n\n## API\n\nSee `examples/` for usage examples.\n\n### var tar = require('tar')\n\nReturns an object with `.Pack`, `.Extract` and `.Parse` methods.\n\n### tar.Pack([properties])\n\nReturns a through stream. Use\n[fstream](https://npmjs.org/package/fstream) to write files into the\npack stream and you will receive tar archive data from the pack\nstream.\n\nThis only works with directories, it does not work with individual files.\n\nThe optional `properties` object are used to set properties in the tar\n'Global Extended Header'. If the `fromBase` property is set to true,\nthe tar will contain files relative to the path passed, and not with\nthe path included.\n\n### tar.Extract([options])\n\nReturns a through stream. Write tar data to the stream and the files\nin the tarball will be extracted onto the filesystem.\n\n`options` can be:\n\n```js\n{\n  path: '/path/to/extract/tar/into',\n  strip: 0, // how many path segments to strip from the root when extracting\n}\n```\n\n`options` also get passed to the `fstream.Writer` instance that `tar`\nuses internally.\n\n### tar.Parse()\n\nReturns a writable stream. Write tar data to it and it will emit\n`entry` events for each entry parsed from the tarball. This is used by\n`tar.Extract`.\n",
    "licenseText": "The ISC License\nCopyright (c) Isaac Z. Schlueter and Contributors\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/tar/-/tar-2.2.2.tgz#0ca8848562c7299b8b446ff6a4d60cdbb23edc40",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/tar/-/tar-2.2.2.tgz",
    "hash": "0ca8848562c7299b8b446ff6a4d60cdbb23edc40",
    "integrity": "sha512-FCEhQ/4rE1zYv9rYXJw/msRqsnmlje5jHP6huWeBZ704jUTy02c5AZyWujpMR1ax6mVw9NyJMfuK2CMDWVIfgA==",
    "registry": "npm",
    "packageName": "tar",
    "cacheIntegrity": "sha512-FCEhQ/4rE1zYv9rYXJw/msRqsnmlje5jHP6huWeBZ704jUTy02c5AZyWujpMR1ax6mVw9NyJMfuK2CMDWVIfgA== sha1-DKiEhWLHKZuLRG/2pNYM27I+3EA="
  },
  "registry": "npm",
  "hash": "0ca8848562c7299b8b446ff6a4d60cdbb23edc40"
}